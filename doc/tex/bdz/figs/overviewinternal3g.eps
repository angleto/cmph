%!PS-Adobe-2.0 EPSF-2.0
%%Title: overviewinternal3g.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5
%%CreationDate: Fri May 29 11:09:04 2009
%%For: fbotelho@fbotelho-laptop (Fabiano C. Botelho,,,)
%%BoundingBox: 0 0 342 128
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 128 moveto 0 0 lineto 342 0 lineto 342 128 lineto closepath clip newpath
-40.3 230.6 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 53
% Polyline
0 slj
0 slc
7.500 slw
n 757 1980 m 652 1980 652 2640 105 arcto 4 {pop} repeat
  652 2745 1155 2745 105 arcto 4 {pop} repeat
  1260 2745 1260 2085 105 arcto 4 {pop} repeat
  1260 1980 757 1980 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 51
% Polyline
0 slj
0 slc
7.500 slw
gs  clippath
5215 2261 m 5264 2278 l 5278 2235 l 5229 2219 l 5229 2219 l 5251 2250 l 5215 2261 l cp
eoclip
n 4399 1969 m
 5257 2252 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5215 2261 m 5251 2250 l 5229 2219 l 5215 2261 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5223 2432 m 5272 2449 l 5286 2406 l 5237 2390 l 5237 2390 l 5259 2421 l 5223 2432 l cp
eoclip
n 4407 2140 m
 5265 2423 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5223 2432 m 5259 2421 l 5237 2390 l 5223 2432 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5216 2650 m 5267 2647 l 5264 2602 l 5213 2605 l 5213 2605 l 5245 2626 l 5216 2650 l cp
eoclip
n 4398 2687 m
 5251 2626 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 5216 2650 m 5245 2626 l 5213 2605 l 5216 2650 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 5362 2523 m 5752 2523 l 5752 2696 l 5362 2696 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5362 2165 m 5752 2165 l 5752 2338 l 5362 2338 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
0.000 slw
n 720 2070 m 900 2070 l 900 2160 l 720 2160 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 48.00 138.00] PATmp PATsp ef gr PATusp 
% Polyline
n 720 2565 m 900 2565 l 900 2655 l 720 2655 l
 cp gs col7 0.00 shd ef gr 
% Polyline
7.500 slw
n 4245 2415 m 4425 2415 l 4425 2595 l 4245 2595 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 4245 2235 m 4425 2235 l 4425 2415 l 4245 2415 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5362 2343 m 5752 2343 l 5752 2516 l 5362 2516 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2835 3150 m 3330 3150 l 3330 3465 l 2835 3465 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
0.000 slw
n 2880 3330 m 3015 3330 l 3015 3420 l 2880 3420 l
 cp gs col7 0.00 shd ef gr 
% Polyline
7.500 slw
n 2340 3150 m 2835 3150 l 2835 3465 l 2340 3465 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1845 3150 m 2340 3150 l 2340 3465 l 1845 3465 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
0.000 slw
n 2385 3330 m 2520 3330 l 2520 3420 l 2385 3420 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 159.00 222.00] PATmp PATsp ef gr PATusp 
% Polyline
n 2602 3017 m 2605 2425 l 2792 2423 l 2788 3044 l 2588 3030 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 172.53 161.53] PATmp PATsp ef gr PATusp 
% Polyline
n 2609 2477 m 2612 1885 l 2799 1883 l 2795 2504 l 2595 2490 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 173.00 125.53] PATmp PATsp ef gr PATusp 
% Polyline
7.500 slw
n 4245 1890 m 4425 1890 l 4425 2070 l 4245 2070 l
 cp gs col7 0.85 shd ef gr gs col0 s gr 
% Polyline
n 4245 2063 m 4425 2063 l 4425 2243 l 4245 2243 l
 cp gs col7 0.85 shd ef gr gs col0 s gr 
% Polyline
n 4245 2595 m 4425 2595 l 4425 2775 l 4245 2775 l
 cp gs col7 0.85 shd ef gr gs col0 s gr 
% Polyline
n 4247 2748 m 4427 2748 l 4427 2928 l 4247 2928 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
0.000 slw
n 2657 3060 m 2111 2491 l 2244 2360 l 2786 2937 l
 cp gs col7 0.00 shd ef gr 
% Polyline
n 2111 2402 m 2660 1838 l 2797 1966 l 2242 2527 l
 cp gs col7 0.55 shd ef gr 
% Polyline
n 2115 3017 m 2118 2425 l 2305 2423 l 2301 3044 l 2101 3030 l
 cp gs col7 0.55 shd ef gr 
% Polyline
n 1890 3330 m 2025 3330 l 2025 3420 l 1890 3420 l
 cp gs col7 0.55 shd ef gr 
% Polyline
n 720 2340 m 900 2340 l 900 2430 l 720 2430 l
 cp gs col7 0.55 shd ef gr 
% Polyline
n 2113 2439 m 2116 1847 l 2303 1845 l 2299 2466 l 2099 2452 l
 cp gs col7 0.00 shd ef gr 
/Times-Italic ff 142.88 scf sf
2835 2474 m
gs 1 -1 sc (h  \(x\)) col0 sh gr
/Times-Roman ff 111.13 scf sf
2916 2520 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 142.88 scf sf
2835 3030 m
gs 1 -1 sc (h  \(x\)) col0 sh gr
/Times-Roman ff 111.13 scf sf
2916 3076 m
gs 1 -1 sc (2) col0 sh gr
/Times-Italic ff 142.88 scf sf
2835 1950 m
gs 1 -1 sc (h  \(x\)) col0 sh gr
/Times-Roman ff 111.13 scf sf
2916 1996 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 142.88 scf sf
4095 2025 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 142.88 scf sf
4095 2205 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 142.88 scf sf
4095 2385 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 142.88 scf sf
4095 2565 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 142.88 scf sf
4095 2745 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 142.88 scf sf
4095 2925 m
gs 1 -1 sc (5) col0 sh gr
/Times-Italic ff 142.88 scf sf
4320 1800 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman ff 142.88 scf sf
5220 2115 m
gs 1 -1 sc (Hash Table    ) col0 sh gr
/Times-Roman ff 142.88 scf sf
5265 2475 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 142.88 scf sf
5265 2655 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 142.88 scf sf
5265 2295 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 158.75 scf sf
1575 1755 m
gs 1 -1 sc (\(a\)) col0 sh gr
/Times-Roman ff 158.75 scf sf
3465 1755 m
gs 1 -1 sc (\(b\)) col0 sh gr
/Times-Roman ff 158.75 scf sf
4680 1755 m
gs 1 -1 sc (\(c\)) col0 sh gr
/Times-Roman ff 142.88 scf sf
3015 3645 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 142.88 scf sf
2565 3645 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 142.88 scf sf
2070 3645 m
gs 1 -1 sc (0) col0 sh gr
/ZapfChancery-MediumItalic ff 174.63 scf sf
3420 3375 m
gs 1 -1 sc (L) col0 sh gr
/Times-Roman ff 142.88 scf sf
2865 3277 m
gs 1 -1 sc ({0,2,5}) col0 sh gr
/Times-Roman ff 142.88 scf sf
2370 3277 m
gs 1 -1 sc ({1,3,5}) col0 sh gr
/Times-Roman ff 142.88 scf sf
1895 3277 m
gs 1 -1 sc ({1,2,4}) col0 sh gr
% here ends figure;
% 
% here starts figure with depth 45
% Polyline
0 slj
0 slc
7.500 slw
gs  clippath
1944 2497 m 1995 2497 l 1995 2452 l 1944 2452 l 1944 2452 l 1974 2475 l 1944 2497 l cp
eoclip
n 1357 2475 m
 1980 2475 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 1944 2497 m 1974 2475 l 1944 2452 l 1944 2497 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3879 2497 m 3930 2497 l 3930 2452 l 3879 2452 l 3879 2452 l 3909 2475 l 3879 2497 l cp
eoclip
n 3292 2475 m
 3915 2475 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 3879 2497 m 3909 2475 l 3879 2452 l 3879 2497 l  cp gs 0.00 setgray ef gr  col0 s
% Ellipse
n 2704 2448 101 101 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 2209 2448 101 101 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 2704 2988 101 101 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 2209 1908 101 101 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 2704 1908 101 101 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 2209 2988 101 101 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

/Times-Roman ff 142.88 scf sf
5423 2663 m
gs 1 -1 sc (band) col0 sh gr
/Times-Roman ff 142.88 scf sf
5460 2304 m
gs 1 -1 sc (the) col0 sh gr
/Times-Roman ff 142.88 scf sf
1418 2430 m
gs 1 -1 sc (Mapping) col0 sh gr
/Times-Roman ff 142.88 scf sf
3285 2430 m
gs 1 -1 sc (Assigning) col0 sh gr
/Times-Roman ff 142.88 scf sf
2674 2485 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 142.88 scf sf
2179 2485 m
gs 1 -1 sc (2) col0 sh gr
/Times-Italic ff 142.88 scf sf
945 1935 m
gs 1 -1 sc (S) col0 sh gr
/Times-Roman ff 142.88 scf sf
967 2160 m
gs 1 -1 sc (who) col0 sh gr
/Times-Roman ff 142.88 scf sf
960 2430 m
gs 1 -1 sc (band) col0 sh gr
/Times-Roman ff 142.88 scf sf
1005 2655 m
gs 1 -1 sc (the) col0 sh gr
/Times-Roman ff 142.88 scf sf
4305 2378 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 142.88 scf sf
5422 2482 m
gs 1 -1 sc (who) col0 sh gr
/Times-Roman ff 142.88 scf sf
4545 2430 m
gs 1 -1 sc (Ranking) col0 sh gr
/Times-Roman ff 142.88 scf sf
3060 3420 m
gs 1 -1 sc (the) col0 sh gr
/Times-Roman ff 142.88 scf sf
2539 3420 m
gs 1 -1 sc (who) col0 sh gr
/Times-Roman ff 142.88 scf sf
2045 3420 m
gs 1 -1 sc (band) col0 sh gr
/Times-Roman ff 142.88 scf sf
2179 1945 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 142.88 scf sf
2674 1945 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 142.88 scf sf
2179 3025 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 142.88 scf sf
2674 3025 m
gs 1 -1 sc (5) col0 sh gr
/Times-Roman ff 142.88 scf sf
4300 2875 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 142.88 scf sf
4305 2548 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 142.88 scf sf
4305 2715 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 142.88 scf sf
4299 2190 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 142.88 scf sf
4299 2033 m
gs 1 -1 sc (0) col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
